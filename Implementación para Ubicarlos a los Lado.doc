Implementación para Ubicarlos a los Lados del Primer Botón:

Para ubicar estos nuevos botones a los lados del botón "Recursos para Estudiantes", la forma más flexible y recomendada es utilizar Flexbox o Grid en CSS. Asumiendo que el botón "Recursos para Estudiantes" ya está dentro de un contenedor (como un <div>), puedes colocar los nuevos botones dentro del mismo contenedor y aplicar estilos para distribuirlos horizontalmente.

Ejemplo de Estructura HTML:

HTML

<div class="botones-container">
    <a href="recursos.html" class="boton-principal">Recursos para Estudiantes</a>
    <a href="unete.html" class="boton-secundario">Únete al MUV</a>
    <a href="novedades.html" class="boton-secundario">Novedades y Eventos</a>
    </div>


    Ejemplo de CSS (Usando Flexbox):

CSS

.botones-container {
    display: flex; /* Activa Flexbox para los hijos */
    justify-content: center; /* Centra los botones horizontalmente */
    align-items: center; /* Centra los botones verticalmente (opcional) */
    gap: 20px; /* Espacio entre los botones */
    padding: 20px; /* Espacio alrededor del contenedor (opcional) */
}

.boton-principal,
.boton-secundario {
    display: inline-block; /* Para poder aplicar padding y márgenes */
    padding: 10px 20px;
    text-decoration: none;
    border-radius: 5px;
    transition: background-color 0.3s ease;
}

.boton-principal {
    background-color: var(--color-acento); /* Usa tu color de acento */
    color: white;
}

.boton-secundario {
    background-color: var(--color-azul-claro);
    color: var(--color-azul-oscuro);
}

.boton-principal:hover {
    background-color: darken(var(--color-acento), 10%); /* Oscurece al pasar el ratón */
}

.boton-secundario:hover {
    background-color: darken(var(--color-azul-claro), 10%);
}

/* Opcional: Estilos responsivos para pantallas más pequeñas */
@media (max-width: 768px) {
    .botones-container {
        flex-direction: column; /* Apila los botones verticalmente en pantallas pequeñas */
        gap: 10px;
    }

    .boton-principal,
    .boton-secundario {
        width: 100%; /* Ocupan todo el ancho en pantallas pequeñas */
        text-align: center;
    }
}


Explicación del CSS:

.botones-container: Se convierte en un contenedor Flexbox (display: flex).
justify-content: center;: Centra los botones horizontalmente dentro del contenedor. Si quieres que estén espaciados a los lados, podrías usar justify-content: space-between; o justify-content: space-around;.
gap: 20px;: Añade un espacio de 20 píxeles entre los botones. Ajusta este valor según necesites.
.boton-principal y .boton-secundario: Estilos básicos para los botones (padding, bordes redondeados, transiciones, etc.). Puedes personalizarlos con tus colores y fuentes.
Media Query: Para pantallas más pequeñas (ancho máximo de 768px en este ejemplo), los botones se apilan verticalmente (flex-direction: column) y ocupan todo el ancho.
Implementación:

Modifica tu index.html: Envuelve tu botón "Recursos para Estudiantes" en un div con la clase botones-container. Agrega las etiquetas <a> para los nuevos botones dentro de este mismo div, con sus respectivos href a las páginas correspondientes y clases como boton-secundario.
Añade el CSS: Copia el código CSS de ejemplo y pégalo en tu archivo style.css (o el archivo CSS que estés utilizando). Personaliza los colores, espaciados y otros estilos según tu diseño.
Crea las páginas destino: Asegúrate de crear los archivos HTML (por ejemplo, unete.html, novedades.html, contacto.html, etc.) a los que enlazarán los nuevos botones.
¡Espero que estas ideas y la explicación de la implementación te sean útiles! ¿Qué otros botones crees que serían más relevantes para tu sitio? ¡Estoy aquí para seguir ayudándote! 😊